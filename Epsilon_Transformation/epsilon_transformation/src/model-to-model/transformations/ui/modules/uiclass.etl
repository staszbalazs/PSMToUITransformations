import "../../../operations/_importAll.eol";

rule UIClass
	transform jclass : PSM!JClass
	to uiclass : UI!UIClass {
	guard : jclass.package.participates(PSM!JLayer#OPERATION) or jclass.package.participates(PSM!JLayer#SCREEN) 
	//inherited from Identifiable
	uiclass.uuid = jclass.uuid;
	uiclass.name = jclass.name;
	
	//Attributes
	uiclass.`abstract` = jclass.`abstract`;
	uiclass.enumClass = jclass.representsEnum;
	uiclass.singleton = jclass.businessSingleton;
	if (jclass.visibility = PSM!JVisibility#PROTECTED or jclass.visibility = PSM!JVisibility#PRIVATE or jclass.visibility = PSM!JVisibility#PACKAGE) {
		uiclass.readonly = true;
	} else {
		uiclass.readonly = false;
	}

	//References
	var representation : UI!UIBaseComponentType = jclass.representation.equivalent("UIBaseComponentType");
	if (representation.isDefined()) {
		representation.representation = true;
		uiclass.representation = representation;
	}
	
	uiclass.super = jclass.supertype.equivalent("UIClass");

	//create ComponentTypes/Actions
	
	for (attr : PSM!JAttribute in jclass.attributes) {
		uiclass.attributes.add(attr.equivalent("UIBaseComponentType"));
	}
	for (role : PSM!JRole in jclass.roles) {
		uiclass.attributes.add(role.equivalent("UIReferenceComponentType"));
	}
	for (op : PSM!JOperation in jclass.operations) {
		if (op.visibility = PSM!JVisibility#PUBLIC) {
			uiclass.actions.add(op.equivalent("UIAction"));
		}	
	}
	
	for (class : PSM!JClass in jclass.getSuperTypes()) {
		var superType = class.equivalent("UIClass");
		var inheretedAttributes = superType.attributes;
		var inheretedActions = superType.actions;
		
		uiclass.inheritedAttributes.addAll(inheretedAttributes);
		uiclass.inheritedActions.addAll(inheretedActions);
	}

	uiclass.~attributesForListing = new Sequence(UI!UIComponentType);
	for (attribute in jclass.attributesForListing) {
		uiclass.~attributesForListing.add(attribute.equivalent("UIBaseComponentType"));
	}

	//create Views
	uiclass.classView = createClassView(uiclass, jclass, uiclass.name, uiclass.uuid + '_oview_default');
	uiclass.listView = createListView(uiclass, uiclass.name, uiclass.uuid + '_lview_default', uiclass.classView);
	
}



